### Approach
The problem involves determining the truthfulness of an eyewitness testimony based on the results of a chain of lie detectors. The key insight is that the last lie detector is always truthful, and each subsequent lie detector reports the truthfulness of the previous one. By working backwards from the last detector, we can propagate the truthfulness of each detector to ultimately determine the truthfulness of the eyewitness testimony.

1. **Problem Analysis**: 
   - We have `N` lie detectors. The first detector reports on the eyewitness testimony. Each subsequent detector (from 2 to `N`) reports on the truthfulness of the previous detector.
   - The last detector (`N`-th) is always truthful.
   - We need to determine the truthfulness of the eyewitness testimony based on the reports of all detectors.

2. **Key Insight**:
   - Starting from the last detector (which is truthful), we can work backwards to determine the truthfulness of each preceding detector.
   - For each detector `i` (from `N-1` down to 1), its truthfulness is determined by the report of the next detector (`i+1`) and the truthfulness of that next detector. Specifically:
     - If the next detector is truthful, then the current detector's truthfulness matches its report.
     - If the next detector is lying, then the current detector's truthfulness is the opposite of its report.
   - Once we determine the truthfulness of the first detector, we can use its report about the eyewitness to find the actual truthfulness of the testimony. If the first detector is truthful, its report directly indicates the testimony's truthfulness. If it is lying, the testimony's truthfulness is the opposite of its report.

3. **Algorithm Selection**:
   - **Backward Propagation**: Start from the last detector (known to be truthful) and iterate backwards to compute the truthfulness of each detector.
   - **Boolean Logic**: Represent "TRUTH" as `true` and "LIE" as `false`. The truthfulness of each detector is computed using the equivalence between the current detector's truthfulness and the next detector's report.

4. **Complexity Analysis**:
   - **Time Complexity**: O(N), as we process each detector exactly once during the backward pass.
   - **Space Complexity**: O(N), to store the reports of the detectors. However, if we read inputs on the fly, we can store only the necessary reports, but typically we store all reports for clarity.

### Solution Code
```python
def main():
    import sys
    data = sys.stdin.read().splitlines()
    n = int(data[0])
    s_list = []
    for i in range(1, n + 1):
        s_list.append(data[i].strip())
    
    current = True
    for i in range(n - 2, -1, -1):
        report = s_list[i + 1]
        R = (report == "TRUTH")
        current = (current == R)
    
    R0 = (s_list[0] == "TRUTH")
    result = (current == R0)
    print("TRUTH" if result else "LIE")

if __name__ == "__main__":
    main()
```

### Explanation
1. **Reading Input**: The input consists of an integer `N` (number of lie detectors) followed by `N` strings (each "TRUTH" or "LIE") representing the reports of the detectors.
2. **Initialization**: Start with the truthfulness of the last detector (`current = true`).
3. **Backward Propagation**: For each detector from the second-last to the first:
   - Convert the report of the next detector (`i+1`) to a boolean (`true` for "TRUTH", `false` for "LIE").
   - Update the truthfulness of the current detector (`i`) as the equivalence between the next detector's truthfulness (`current`) and its report (`R`). This handles both cases (truthful or lying next detector).
4. **Determine Eyewitness Truthfulness**:
   - Convert the first detector's report to a boolean (`R0`).
   - The eyewitness truthfulness is the equivalence between the first detector's truthfulness (`current`) and its report (`R0`).
5. **Output**: Print "TRUTH" if the eyewitness testimony is truthful, otherwise "LIE".

This approach efficiently propagates the known truthfulness from the last detector back to the first, leveraging boolean logic to handle the dependencies between detectors, and finally deduces the eyewitness truthfulness based on the first detector's report and its computed truthfulness.